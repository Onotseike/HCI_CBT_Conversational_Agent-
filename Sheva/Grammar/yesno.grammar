;;
;; yesno.grammar
;;
;; Sub-grammars that contain yes and no words as well as confirmations.
;;
;; There is a small semantic distinction between pure yes/no words and
;; ones that directly relate to confirmation, but that distinction is not
;; made in these grammars.
;;
;; I have disallowed "uh-huh" as a legal yes-word, because it is too vague
;; and ambiguous.
;;


;;
;; only used internally - not meant for public consumption
;;
_IT_IS
    (it ?[sure certainly] is)

;;
;; many possible ways to say "yes"
;;
YES_WORDS [(yes ?_IT_IS)
           _IT_IS
           yup
           yeah
           okay
           sure
           (you got it)
           (?(?yes that's) [right correct])
          ]

_YES_TRAILERS
    [please thanks (thank you)]


;;
;; only used internally - not meant for public consumption
;;
_IT_IS_NOT
    [(it isn't) (it's not) (it is not)]

;;
;; many possible ways to say "no"
;;
NO_WORDS  [nope
           (absolutely not)
           (no ?[_IT_IS_NOT way])
           _IT_IS_NOT
           (?(?no that's)
            [wrong
             (not [correct right])
             incorrect
            ]
           )
          ]

_NO_TRAILERS
    [thanks (thank you)]


;;
;; a confirmation that allows only yes or no words to be said
;;
CONFIRMATION
    [YES_WORDS                          {return(1)}
     NO_WORDS                           {return(0)}
    ]

;;
;; a confirmation that allows hesitation, followed by yes/no words and an
;;      optional "thank you"
;;
LOOSE_CONFIRMATION
    (?[um uh]
     [(YES_WORDS ?_YES_TRAILERS)        {return(1)}
      (NO_WORDS ?_NO_TRAILERS)          {return(0)}
     ]
    )

.TOPLEVEL
   [
     LOOSE_CONFIRMATION
   ]
